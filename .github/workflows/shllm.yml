name: shllm

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  shllm:
    runs-on: ubuntu-latest

    steps:
    - name: Check API key availability
      run: |
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "API Key is not set or empty."
          exit 1
        else
          echo "API Key is set."
        fi
    
    - uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies with Poetry
      run: |
        poetry install

    - name: Run integration tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        poetry run pytest test_shllm.py

    - name: Build the project
      run: |
        poetry build

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        echo "::set-output name=version::$(poetry version --short)"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Assets (tar.gz)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/shllm-${{ steps.get_version.outputs.version }}.tar.gz
        asset_name: shllm-${{ steps.get_version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload Wheel Release Asset (whl)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/shllm-${{ steps.get_version.outputs.version }}-py3-none-any.whl
        asset_name: shllm-${{ steps.get_version.outputs.version }}.whl
        asset_content_type: application/zip

    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
      run: |
        poetry publish --build